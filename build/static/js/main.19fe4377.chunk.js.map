{"version":3,"sources":["Routing/MyContext.js","forms/RegistrationForm.js","forms/LoginForm.js","compo/Add.js","compo/Dis.js","compo/Task.js","forms/Logout.js","compo/Main.js","Routing/ProtectedRoute.js","App.js","serviceWorker.js","index.js"],"names":["MyContext","createContext","RegistrationForm","login","useContext","useState","name","email","password","confirmpassword","status","state","setState","handleChange","e","target","id","value","prev","className","onSubmit","preventDefault","axios","post","process","then","resp","catch","error","type","onChange","autoFocus","to","exact","LoginForm","changeContext","changeUser_id","withCredentials","console","log","data","user_name","Add","props","handleSubmit","funt","title","task","this","required","row","cols","Component","Dis","handleChangeDis","handleClick","onClick","rows","dis","Task","object","handleDetails","t","dis_id","handleDis","prestate","curtprops","handleUpdate","put","handleDelete","delete","arr","map","key","Logout","user_id","get","rsp","Main","get_refresh","ProtectedRoute","component","rest","render","pathname","from","location","App","setLogin","setUser_id","useEffect","Provider","d","path","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.19fe4377.chunk.js","sourcesContent":["import { createContext } from 'react'\n\nconst MyContext = createContext()\n\nexport default MyContext ","import React, { useState, useContext } from 'react'\nimport axios from 'axios'\nimport { Redirect } from 'react-router-dom'\nimport MyContext from '../Routing/MyContext'\n\nfunction RegistrationForm() {\n    const { login } = useContext(MyContext)\n    const [state, setState] = useState({\n        name: '',\n        email: '',\n        password: '',\n        confirmpassword:'',\n        status: null\n    })\n    const handleChange = (e) => {\n        const { id, value } = e.target\n        setState(prev => ({\n            ...prev, [id]: value\n        }))\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (state.password === state.confirmpassword) {\n            \n            axios.post(process.env.REACT_APP_URL+'register', state)\n                .then(resp => {\n                    if (resp.status === 200) {\n                        setState({\n                            ...state, status: resp.status\n                        })\n                    }\n\n                })\n                .catch(error => {                   \n                    setState({\n                        ...state, status: 500\n                    })\n                })\n        }\n\n        else if (state.name === '' || state.email === '' || state.password === '') {\n            \n            setState({ ...state, status: 101 })\n        }\n        else {\n            \n            setState({ ...state, status: 100 })\n        }\n    }\n    return (\n        <div >\n            <form className='formInp' onSubmit={handleSubmit}>\n                Name:<br></br>\n                <input type='text' id='name' onChange={handleChange} autoFocus /><br></br>\n                Email:<br></br>\n                <input type='text' id='email' onChange={handleChange} /><br></br>\n                Password:<br></br>\n                <input type='password' id='password' onChange={handleChange} /><br></br>\n                ConfirmPassword:<br></br>\n                <input type='password' id='confirmpassword' onChange={handleChange} /><br></br>\n                <br></br>\n                <button id='reg_but' type='submit'>Register</button>\n            </form>\n            {login ? <Redirect to='/todo' /> : null}\n            {\n                (state.status === 100) && <p>Password Doesn't Match</p>\n            }\n            {\n                (state.status === 101) && <p>Please fill the blank</p> \n            }\n            {\n                (state.status === 200) && <div><Redirect exact to={`/login`} /></div>\n            }\n            {\n                (state.status === 500) && <div> <Redirect exact to={`/register`} /> <p>Server Not Responding</p> </div>\n            }\n\n        </div>\n    )\n}\n\nexport default RegistrationForm\n\n\n","import React, { useState, useContext } from 'react'\nimport axios from 'axios'\nimport MyContext from '../Routing/MyContext'\nimport { Redirect } from 'react-router-dom'\n\nexport default function LoginForm() {\n    const { login, changeContext, changeUser_id } = useContext(MyContext)\n\n    const [state, setState] = useState({\n        email: '',\n        password: '',\n        error: null\n    })\n    const handleChange = (e) => {\n        const { id, value } = e.target\n        setState(prev => ({\n            ...prev, [id]: value\n        }))\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        axios.post(process.env.REACT_APP_URL+'login', state, { withCredentials: true })\n            .then(resp => {\n                setState({ ...state, error: false })\n                console.log(resp)\n                changeContext()\n                changeUser_id(resp.data.user_name)\n            })\n            .catch(error => {\n                setState({\n                    ...state, error: true\n                })\n            })\n    }\n    /*function userredirect(login) {\n        if (login === true) {\n            console.log(\"Redirect\")\n            return <Redirect exact to={'/todo'} />\n        }\n        else {\n            console.log(\"Login\")\n            return <Redirect exact to={'/login'} />\n        }\n    }*/\n\n    return (\n        <div>\n            <form className='formInp' onSubmit={handleSubmit}>\n                Email:<br></br>\n                <input type='text' id='email' value={state.email} onChange={handleChange} /><br></br>\n                Password:<br></br>\n                <input type='password' id='password' value={state.password} onChange={handleChange} /><br></br>\n                <button id='login_but' type='submit'>Login</button>\n            </form>\n            \n            {\n                (login === true) ? <Redirect exact to={'/todo'} /> : null\n            }\n\n            {\n                state.error ? <p>Unauthorised</p> : null\n            }\n        </div>\n    )\n}\n\n","import React, { Component } from 'react'\nimport axios from 'axios'\n\nclass Add extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            title: '',\n            task: '',\n        }\n    }\n    handleChange = e => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n    handleSubmit = e => {\n        e.preventDefault()\n        axios.post(process.env.REACT_APP_URL+'todo', this.state, { withCredentials: true })\n            .then(resp => {\n                return this.props.funt();\n            })\n            .catch(error => { console.log(error) })\n        this.setState({\n            title: '',\n            task: ''\n        })\n    }\n    render() {\n        const { title, task } = this.state\n        return (\n            <div >\n                <form onSubmit={this.handleSubmit}>\n                    <div className='add_inp_but'>\n                        <div className='add_inp'>\n\n                            <input className='add_inp_txt' type=\"text\" name=\"title\" value={title} onChange={this.handleChange} required />\n\n\n                            <textarea className='add_inp_txtarea' row='100%' cols='100%' name='task' value={task} onChange={this.handleChange} required></textarea>\n\n                        </div>\n                        <div className='add_but'>\n                            <button className=\"btn btn-primary\" type='submit'>ADD</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n\n}\n\nexport default Add\n","import React, { Component } from 'react'\n\nclass Dis extends Component {\n\n    handleChange = (e) => {\n        this.props.handleChangeDis(e.target.value)\n    }\n    handleClick = (e) => {\n        this.props.onClick(e.target.value)\n    }\n    render() {\n        return (\n            <>\n                <div className='dis_inp'>\n                    <textarea className='dis_txt' rows='100%' cols='100%' value={this.props.dis} onChange={this.handleChange}></textarea>\n                </div>\n                <div className=\"dis_but\">\n                    <button className=\"btn btn-success\" onClick={this.handleClick}>Update</button>\n                </div>\n            </>\n        )\n    }\n}\nexport default Dis\n\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport Dis from './Dis'\n\nclass Task extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            dis: { task: '' },\n            dis_id: ''\n        }\n    }\n    handleChange = (e) => {\n        let object = { ...this.state.dis, ...{ task: e.target.value } }\n        this.setState({\n            dis: object\n        })\n    }\n\n    componentDidMount() {\n        return this.props.funt();\n    }\n\n    handleDetails = (t) => {\n        this.setState({\n            dis: t,\n            dis_id: t.id\n        })\n    }\n    handleDis = (task) => {\n        this.setState((prestate, curtprops) => ({\n            dis: { ...prestate, task: task }\n        }));\n    }\n    handleUpdate = (e) => {\n        //e.preventDefault()\n        axios.put(process.env.REACT_APP_URL+'todo/' + this.state.dis_id, { task: this.state.dis.task }, { withCredentials: true })\n            .then(resp => {\n                return this.props.funt();\n            })\n            .catch(error => { console.log(error) })\n        this.setState({\n            dis: { task: '' },\n            dis_id: ''\n        })\n    }\n    handleDelete = (id) => {\n        axios.delete(process.env.REACT_APP_URL+'todo/'+ id, { withCredentials: true })\n            .then(resp => {\n                this.setState({\n                    dis: { task: '' }\n                })\n                return this.props.funt();\n\n            })\n            .catch(error => { console.log(error) });\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"task\" >\n                    {this.props.arr.map(task =>\n                        <div className='task_inp_but' key={task.id}>\n                            <div className=\"task_inp\">\n                                {task.title}\n                            </div>\n                            <div className='task_but'>\n                                <div>\n                                    <button className=\"btn btn-info\" onClick={() => this.handleDetails(task)}>DETAILS</button>\n                                </div>\n                                <div>\n                                    <button className=\"btn btn-danger\" onClick={() => this.handleDelete(task.id)}>DELETE</button>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                </div>\n                <div className=\"dis\">\n                    DISCRIPTION\n                    <div className=\"dis_inp_but\">\n                        <Dis dis={this.state.dis.task} handleChangeDis={this.handleDis} onClick={this.handleUpdate} />\n                    </div>\n                </div>\n            </div>\n            /*<div className='dis'>\n                DISCRIPTION\n                <div className=\"dis_inp_but\">\n                    <div className='dis_inp'>\n                        <textarea classname=\"dis_txt\" rows=\"2\" cols=\"35\" type=\"text\" value={this.state.dis.task} onChange={this.handleChange}></textarea>\n                    </div>\n                    <div className=\"dis_but\">\n                        <button class=\"btn btn-success\" onClick={this.handleUpdate}>Update</button>\n                    </div>\n                </div>\n            </div>*/\n        )\n    }\n\n\n}\n\nexport default Task\n","import React, { useContext } from 'react'\nimport axios from 'axios'\nimport { Redirect } from 'react-router-dom'\nimport MyContext from '../Routing/MyContext'\n\nfunction Logout() {\n    const { login, changeContext, user_id } = useContext(MyContext)\n\n    const handleClick = () => {\n        axios.get(process.env.REACT_APP_URL+'logout', { withCredentials: true })\n            .then(rsp => {\n                changeContext(false)              \n            })\n            .catch(error => { console.log(error) })\n    }\n\n    return (\n        <div className=\"logout\">\n            <p>Hello {user_id}</p>\n            <p>To logout press the button</p>\n            <button className=\"btn btn-danger\" onClick={handleClick}>Logout</button>\n            {\n                (login === false) ? <Redirect exact to='/login' /> : null\n            }\n        </div>\n    )\n}\n\nexport default Logout\n","import React, { useState, useContext } from 'react'\nimport axios from 'axios'\nimport Add from './Add';\nimport Task from './Task';\nimport Logout from '../forms/Logout';\nimport MyContext from '../Routing/MyContext';\nimport { Redirect } from 'react-router-dom';\n\nfunction Main() {\n    const { login } = useContext(MyContext)\n    const [state, setState] = useState({\n        arr: [],\n    })\n    const get_refresh = () => {\n        return axios.get(process.env.REACT_APP_URL+'todo', { withCredentials: true })\n            .then(resp => {\n                setState({\n                    arr: resp.data\n                })\n\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n    return (\n\n        <div className=\"todo\">\n            <div className=\"add\">\n                ADD\n                    <Add funt={get_refresh} />\n            </div>\n            <div className='task_main'>\n                TASK\n                        <Task funt={get_refresh} arr={state.arr} />\n            </div>\n            <div >\n                <Logout />\n            </div>\n            {\n                login === true ? null : <Redirect exact to='/login' />\n            }\n        </div>\n    );\n\n\n}\n\nexport default Main\n","import React, { useContext } from 'react'\nimport { Route } from 'react-router-dom'\nimport MyContext from './MyContext';\nimport { Redirect } from 'react-router-dom'\n\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\n    const { login } = useContext(MyContext)\n\n\n\n    return (\n        <Route {...rest}\n            render={props => (\n                (login === true) ? < Component {...rest} /> :\n                    <Redirect to={{\n                        pathname: '/login',\n                        state: { from: props.location }\n                    }} />\n            )} />\n\n    );\n}\n\nexport default ProtectedRoute","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch, Link, Redirect } from 'react-router-dom'\nimport RegistrationForm from './forms/RegistrationForm'\nimport LoginForm from './forms/LoginForm'\nimport Main from './compo/Main'\nimport ProtectedRoute from './Routing/ProtectedRoute'\nimport MyContext from './Routing/MyContext'\nimport axios from 'axios';\n\nfunction App() {\n\tconst [login, setLogin] = useState(false)\n  const [user_id, setUser_id] = useState('')\n\n  const changeContext = () => {\n    setLogin(!login)\n    console.log(\"in_Route\" + login)\n  }\n  const changeUser_id = (d) => {\n    setUser_id(d)\n  }\n\n  useEffect(\n    () => {\n      function fetch() {\n        axios.get(`${process.env.REACT_APP_URL}details`, { withCredentials: true })\n          .then(resp => {\n            console.log('in')\n            console.log(resp)\n            setLogin(true)\n            setUser_id(resp.data.user_name)\n          })\n          .catch(resp => {\n            console.log(resp)\n          })\n      }\n      fetch()\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []\n  );\n\n  return (\n       <BrowserRouter>\n      <MyContext.Provider value={{ login, changeContext, user_id, changeUser_id }}>\n        <div className=\"app\">\n\n          <div className='main'>\n            <h1>Welcome<br></br> To The TO-DO LIST APP</h1>\n            <p>This App will help you to remember all your future working tasks </p>\n          </div>\n\n          <div className='header'>\n            <nav>\n              <ul>\n                <li><Link to='/register' className='link'>Register</Link></li>\n                <li><Link to='/login' className='link'>Login</Link></li>\n              </ul>\n              <hr ></hr>\n            </nav>\n          </div>\n\n          <div className='sidebar' >\n            <Switch>\n              <Route path='/register'>  <RegistrationForm />  </Route>\n              <Route path='/login'>  <LoginForm />  </Route>\n\n              {login ? <ProtectedRoute path='/todo' component={Main} /> : <Redirect to='login' />}\n            </Switch>\n          </div>\n        </div>\n      </MyContext.Provider>\n    </BrowserRouter >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}